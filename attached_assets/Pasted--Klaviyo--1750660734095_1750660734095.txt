Разбира се! Интеграцията с Klaviyo е изключително мощна стъпка за вашия маркетинг. Процесът е подобен на този с Google Analytics и се състои от две основни части: проследяване на посетителите (frontend) и изпращане на данни от форми (backend).

Ще ви покажа най-добрия и сигурен начин да го направите за вашия Vite + React сайт, хостван на Vercel.

Част 1: Настройка в Klaviyo (Какво ви трябва)
Преди да пипате кода, трябва да си набавите два ключа от Klaviyo.

Влезте в акаунта си в klaviyo.com.
Отидете в Settings -> API Keys.
Ще видите Public API Key (Публичен API Ключ). Той обикновено е низ от 6 символа. Копирайте го. Този ключ е безопасен за използване в frontend кода.
На същата страница натиснете бутона "Create Private API Key". Дайте му име, например "Vercel Backend Integration". Klaviyo ще генерира дълъг ключ, който започва с pk_.... Този ключ е ТАЕН! Копирайте го и го пазете на сигурно. Той ще се използва само на сървъра.
Част 2: Проследяване на Посетителите (Frontend част в Replit)
Тази стъпка позволява на Klaviyo да знае кога някой посещава сайта ви. Най-елегантният начин да добавим техния JavaScript код е като използваме пакет за управление на <head> тага в React.

Стъпка 2.1: Инсталирайте react-helmet-async
В Shell таба на Replit изпълнете:

Bash

npm install react-helmet-async
Стъпка 2.2: Настройте HelmetProvider
Отворете основния си файл src/main.jsx и обвийте вашия <App /> компонент с <HelmetProvider>:

JavaScript

import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.jsx'
import './index.css'
import { HelmetProvider } from 'react-helmet-async'; // Импортираме Provider

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <HelmetProvider> {/* Обвиваме App */}
      <App />
    </HelmetProvider>
  </React.StrictMode>,
)
Стъпка 2.3: Създайте компонент за Klaviyo скрипта
Създайте нов файл src/components/KlaviyoSetup.jsx със следното съдържание. То ще инжектира скрипта на Klaviyo във всяка страница.

JavaScript

import React from 'react';
import { Helmet } from 'react-helmet-async';

const KlaviyoSetup = () => {
  const KLAVIYO_PUBLIC_KEY = import.meta.env.VITE_KLAVIYO_PUBLIC_API_KEY;

  if (!KLAVIYO_PUBLIC_KEY) {
    return null; // Не прави нищо, ако ключът не е настроен
  }

  const klaviyoScript = `
    var _learnq = _learnq || [];
    _learnq.push(['account', '${KLAVIYO_PUBLIC_KEY}']);
    (function () {
      var b = document.createElement('script');
      b.type = 'text/javascript';
      b.async = true;
      b.src = 'https://static.klaviyo.com/analytics/js/klaviyo.js?v=1';
      var a = document.getElementsByTagName('script')[0];
      a.parentNode.insertBefore(b, a);
    })();
  `;

  return (
    <Helmet>
      <script>{klaviyoScript}</script>
    </Helmet>
  );
};

export default KlaviyoSetup;
Стъпка 2.4: Използвайте новия компонент
Отворете src/App.jsx и добавете <KlaviyoSetup /> някъде вътре в основния компонент.

JavaScript

import KlaviyoSetup from './components/KlaviyoSetup'; // Импортираме компонента
// ... други импорти

function App() {
  // ... вашият usePageTracking hook и друга логика ...

  return (
    <Router>
      <KlaviyoSetup /> {/* <<-- ДОБАВЯМЕ ГО ТУК */}
      {/* ... останалата част от вашия App компонент ... */}
    </Router>
  );
}